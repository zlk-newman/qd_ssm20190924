<?xml version="1.0" encoding="UTF-8"?>
<web-app version="4.0" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd">

    <display-name>Archetype Created Web Application</display-name>

    <!-- ===========配置spring框架bean容器管理：
    spring容器的在tomcat等web服务器中的加载启动，这样子可以使用spring的ioc和di以及aop了=============== -->
    <!-- 配置框架启动需加载的相关参数 -->
    <context-param>
        <!-- 该参数名是固定的，用在spring监听器中 -->
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:configs/config-spring.xml</param-value>
    </context-param>

    <!-- 配置spring的监听器：使spring一直监听web容器，对web容器中的所有的实体对象进行管理， 等价于加载ApplicationContext
        对象；也就是说spring通过由web服务器加载ContextLoaderListener监听器来启动spring框架 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 防止Spring内存溢出监听器(可选) -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- ==========配置springmvc的默认控制转发servlet：DispatcherServlet============= -->
    <servlet>
        <servlet-name>defaultServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 设置初始化参数，加载配置文件 -->
        <init-param>
            <!-- 参数名是固定的，不能写错 -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:configs/config-springmvc.xml</param-value>
        </init-param>
        <!-- 父进程的加载顺序，web服务器已启动就加载 -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>defaultServlet</servlet-name>
        <!-- 过滤转发的路径范围 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <!--=================配置springmvc框架的编码过滤器，解决中文传输乱码的问题========================-->
    <filter>
        <filter-name>CharsetEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--初始化参数，设置CharacterEncodingFilter类在创建时的初始化参数的值-->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>

    <!--filter的映射路径-->
    <filter-mapping>
        <filter-name>CharsetEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--===============获取服务器绝对路径===================-->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>server.basePath</param-value>
        <!--action中通过 System.getProperty("server.basePath") 可以获取当前web项目在服务器上的绝对路径-->
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
    </listener>

    <!-- =========框架默认启动主页============ -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>

</web-app>
